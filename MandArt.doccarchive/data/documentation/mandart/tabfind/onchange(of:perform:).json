{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/mandart\/tabfind\/onchange(of:perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt\/TabFind\/onChange(of:perform:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.onChange(of:perform:)"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"MandArt","relatedModules":["SwiftUI"]}],"extendedModule":"SwiftUI","platforms":[{"unavailable":false,"message":"Use `onChange` with a two or zero parameter action closure instead.","deprecated":false,"beta":false,"name":"iOS","introducedAt":"14.0","deprecatedAt":"17.0"},{"unavailable":false,"introducedAt":"11.0","message":"Use `onChange` with a two or zero parameter action closure instead.","deprecatedAt":"14.0","deprecated":false,"beta":false,"name":"macOS"},{"deprecatedAt":"17.0","beta":false,"unavailable":false,"introducedAt":"14.0","message":"Use `onChange` with a two or zero parameter action closure instead.","name":"tvOS","deprecated":false},{"introducedAt":"7.0","deprecated":false,"unavailable":false,"name":"watchOS","deprecatedAt":"10.0","message":"Use `onChange` with a two or zero parameter action closure instead.","beta":false}],"externalID":"s:7SwiftUI4ViewPAAE8onChange2of7performQrqd___yqd__ctSQRd__lF::SYNTHESIZED::s:7MandArt7TabFindV","title":"onChange(of:perform:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt","doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt\/TabFind","doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt\/TabFind\/View-Implementations"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `onChange` with a two or zero parameter action closure instead."}],"type":"paragraph"}],"references":{"doc://Bruce-Johnson.MandArt/documentation/MandArt":{"title":"MandArt","abstract":[{"text":"MandArt is the ultimate app for creating custom art from the Mandelbrot set.","type":"text"}],"url":"\/documentation\/mandart","type":"topic","identifier":"doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt","role":"collection","kind":"symbol"},"doc://Bruce-Johnson.MandArt/documentation/MandArt/TabFind/View-Implementations":{"url":"\/documentation\/mandart\/tabfind\/view-implementations","kind":"article","type":"topic","title":"View Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt\/TabFind\/View-Implementations"},"doc://Bruce-Johnson.MandArt/documentation/MandArt/TabFind":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TabFind"}],"title":"TabFind","abstract":[],"type":"topic","identifier":"doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt\/TabFind","role":"symbol","navigatorTitle":[{"text":"TabFind","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mandart\/tabfind"},"doc://Bruce-Johnson.MandArt/documentation/MandArt/TabFind/onChange(of:perform:)":{"url":"\/documentation\/mandart\/tabfind\/onchange(of:perform:)","role":"symbol","abstract":[],"identifier":"doc:\/\/Bruce-Johnson.MandArt\/documentation\/MandArt\/TabFind\/onChange(of:perform:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"deprecated":true,"kind":"symbol","title":"onChange(of:perform:)","type":"topic"}}}